{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\DropdownMenu.svelte",
    "..\\..\\TopNav.svelte",
    "..\\..\\DefinitionView.svelte",
    "..\\..\\SlangView.svelte",
    "..\\..\\TranslationView.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import TopNav from \"./Components/TopNav.svelte\";\n\n  import TranslationView from \"./Views/TranslationView.svelte\";\n  import DefinitionView from \"./Views/DefinitionView.svelte\";\n  import SlangView from \"./Views/SlangView.svelte\";\n\n  let currentTab = \"translation\";\n\n  var targetWords;\n\n</script>\n\n<style lang=\"scss\">main {\n  display: grid;\n  row-gap: 5px;\n  padding: 5px; }\n\n/*# sourceMappingURL=App.svelte.css.map */</style>\n\n<main>\n  <TopNav on:tabChange={(e) => currentTab = e.detail.value} />\n  {#if currentTab == \"translation\"}\n     <TranslationView bind:targetWords={targetWords} />\n  {:else if  currentTab == \"definition\"}\n     <DefinitionView bind:targetWords={targetWords}/>\n  {:else}\n     <SlangView bind:targetWords={targetWords}/>\n  {/if}\n  \n</main>\n",
    "<script lang=\"ts\">let isActive;\r\nexport let placeholder;\r\nexport let items;\r\nexport let justifySelf;\r\n</script>\r\n\r\n<style lang=\"scss\">.dropdown {\n  width: max-content; }\n\n/*# sourceMappingURL=DropdownMenu.svelte.css.map */</style>\r\n\r\n<div\r\n  class=\"dropdown\"\r\n  style=\"justify-self:{justifySelf};\"  \r\n  on:click={() => (isActive = !isActive)}\r\n  class:is-active={isActive}>\r\n  <div class=\"dropdown-trigger\">\r\n    <button\r\n      class=\"button is-dark\"\r\n      aria-haspopup=\"true\"\r\n      aria-controls=\"dropdown-menu\">\r\n      <span>{placeholder}</span>\r\n      <span class=\"icon is-small\">\r\n        <i class=\"fas fa-angle-down\" aria-hidden=\"true\" />\r\n      </span>\r\n    </button>\r\n  </div>\r\n  <div class=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\r\n    <div class=\"dropdown-content\">\r\n      {#each items as item}\r\n        <a href=\"/\" class=\"dropdown-item\">{item}</a>\r\n      {/each}\r\n    </div>\r\n  </div>\r\n</div>\r\n",
    "<script lang=\"ts\">import { createEventDispatcher } from \"svelte\";\r\nlet isTranslationSelected = true;\r\nlet isDefinitionSelected;\r\nlet isSlangSelected;\r\nconst dispatch = createEventDispatcher();\r\nfunction tabChanged(tab) {\r\n    dispatch(\"tabChange\", {\r\n        value: tab\r\n    });\r\n}\r\nfunction selectTab(tabName) {\r\n    if (tabName == \"translation\") {\r\n        isTranslationSelected = true;\r\n        isDefinitionSelected = false;\r\n        isSlangSelected = false;\r\n    }\r\n    else if (tabName == \"definition\") {\r\n        isTranslationSelected = false;\r\n        isDefinitionSelected = true;\r\n        isSlangSelected = false;\r\n    }\r\n    else {\r\n        isTranslationSelected = false;\r\n        isDefinitionSelected = false;\r\n        isSlangSelected = true;\r\n    }\r\n    tabChanged(tabName);\r\n}\r\n</script>\n\n<style lang=\"scss\">nav {\n  display: grid;\n  row-gap: 10px; }\n\nnav-top {\n  justify-self: center; }\n\n/*# sourceMappingURL=TopNav.svelte.css.map */</style>\n\n<nav>\n  <nav-top>\n    <div class=\"field has-addons\">\n      <p class=\"control\">\n        <button\n          class=\"button is-dark\"\n          on:click={() => selectTab('translation')}\n          class:is-warning={isTranslationSelected}\n          class:is-selected={isTranslationSelected}>\n          <span class=\"icon is-small\">\n            <i class=\"fas fa-language\" />\n          </span>\n          <span>Translation</span>\n        </button>\n      </p>\n      <p class=\"control\">\n        <button\n          class=\"button is-dark\"\n          on:click={() => selectTab('definition')}\n          class:is-warning={isDefinitionSelected}\n          class:is-selected={isDefinitionSelected}>\n          <span class=\"icon is-small\">\n            <i class=\"fas fa-book\" />\n          </span>\n          <span>Definition</span>\n        </button>\n      </p>\n      <p class=\"control\">\n        <button\n          class=\"button is-dark\"\n          on:click={() => selectTab('slang')}\n          class:is-warning={isSlangSelected}\n          class:is-selected={isSlangSelected}>\n          <span class=\"icon is-small\">\n            <i class=\"fab fa-stripe-s\" />\n          </span>\n          <span>Slang</span>\n        </button>\n      </p>\n    </div>\n  </nav-top>\n\n</nav>\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport { translate } from \"../API/google-translate\";\r\nimport DropdownMenu from \"../Components/DropdownMenu.svelte\";\r\nexport let targetWords;\r\nonMount(async () => {\r\n    if (targetWords) {\r\n        await defineWords(null);\r\n    }\r\n});\r\nlet definitionResult;\r\nasync function defineWords(e) {\r\n    let result = await translate(targetWords, { from: \"en\", to: \"tr\" }, true);\r\n    if (result) {\r\n        if (result.hasOwnProperty(\"definitions\")) {\r\n            definitionResult = result;\r\n        }\r\n    }\r\n    console.log(definitionResult);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">textarea {\n  color: white;\n  background-color: #333333;\n  border: none; }\n  textarea::placeholder {\n    color: #a7a7a7; }\n\ntop-bar {\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr; }\n\n#definitions-of {\n  color: white;\n  background-color: #292929; }\n\n.definition-result-area {\n  display: grid;\n  row-gap: 10px;\n  color: #a7a7a7;\n  background-color: #424242;\n  padding-bottom: 10px; }\n  .definition-result-area .definition-result-area-header {\n    color: #ffdd57; }\n  .definition-result-area .definition-result-line {\n    display: grid;\n    grid-auto-flow: column;\n    grid-template-columns: max-content 1fr;\n    column-gap: 10px; }\n    .definition-result-area .definition-result-line .line-count {\n      display: flex;\n      justify-content: center;\n      width: 25px;\n      height: 25px;\n      border: 1px solid #6f6f6f;\n      border-radius: 100%; }\n    .definition-result-area .definition-result-line .definition-word-of-line {\n      padding: 10px;\n      background-color: #545454;\n      border-radius: 10px;\n      color: white; }\n\n/*# sourceMappingURL=DefinitionView.svelte.css.map */</style>\r\n\r\n<top-bar />\r\n\r\n<textarea\r\n  bind:value={targetWords}\r\n  on:input={defineWords}\r\n  class=\"textarea has-fixed-size\"\r\n  placeholder=\"Write a word\"\r\n  name=\"main-text-area\"\r\n  id=\"main-text-area\"\r\n  cols= {30}\r\n  rows= {5} />\r\n{#if definitionResult != null}\r\n  <div id=\"definition-of\">Definitions of {targetWords}</div>\r\n\r\n  {#each definitionResult.definitions as definition}\r\n    <div class=\"definition-result-area\">\r\n      <span class=\"definition-result-area-header\">{definition.type}</span>\r\n      {#each definition.content as line, i}\r\n        <div class=\"definition-result-line\">\r\n          <div class=\"line-count\">{i + 1}</div>\r\n          <span class=\"definition-word-of-line\">{line.phrase}</span>\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  {/each}\r\n{/if}\r\n",
    "<script lang=\"ts\">import { translate } from \"../API/google-translate\";\r\nimport DropdownMenu from \"../Components/DropdownMenu.svelte\";\r\nlet languages = [\"Turkish\", \"English\"];\r\nexport let targetWords;\r\nlet translationResult;\r\nlet showSimilarWordsForTranslations = false;\r\nasync function translateWords(e) {\r\n    targetWords = e.target.value;\r\n    translationResult = await translate(targetWords, { from: \"en\", to: \"tr\" }, false);\r\n    console.log(translationResult);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">textarea {\n  color: white;\n  background-color: #333333;\n  border: none; }\n  textarea::placeholder {\n    color: #a7a7a7; }\n\ntop-bar {\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr; }\n  top-bar button {\n    justify-self: center;\n    width: max-content; }\n\n.translate-from {\n  justify-self: right; }\n\n#translations-of {\n  color: white;\n  background-color: #292929; }\n\n.translate-result-area {\n  display: grid;\n  color: #a7a7a7;\n  background-color: #424242; }\n  .translate-result-area .translate-result-area-header {\n    color: #ffdd57; }\n  .translate-result-area .translate-result-line {\n    display: grid;\n    grid-auto-flow: column;\n    grid-auto-columns: 1fr; }\n    .translate-result-area .translate-result-line .translation-word-of-line {\n      color: white; }\n\n/*# sourceMappingURL=SlangView.svelte.css.map */</style>\r\n\r\n<top-bar>\r\n  <DropdownMenu placeholder=\"Translate To\" items={languages} />\r\n  <button class=\"button is-link\">\r\n    <span class=\"icon is-medium\">\r\n      <i class=\"fas fa-exchange-alt\" />\r\n    </span>\r\n  </button>\r\n  <DropdownMenu\r\n    justifySelf=\"right\"\r\n    placeholder=\"Translate From\"\r\n    items={languages} />\r\n</top-bar>\r\n\r\n<textarea\r\n  bind:value={targetWords}\r\n  on:change={translateWords}\r\n  class=\"textarea has-fixed-size\"\r\n  placeholder=\"Translate\"\r\n  name=\"main-text-area\"\r\n  id=\"main-text-area\"\r\n  cols={30}\r\n  rows={5} />\r\n{#if translationResult != null}\r\n  {#if translationResult.target != null}\r\n    <div id=\"translations-of\">Translations of {targetWords}</div>\r\n  {/if}\r\n  <div class=\"translate-result-area\">\r\n    <span class=\"translate-result-area-header\" style=\"font-weight: bold;\">\r\n      most common\r\n    </span>\r\n    <span style=\"font-weight: bold; color:white;\">\r\n      {translationResult.translation}\r\n    </span>\r\n  </div>\r\n  {#each translationResult.translations as translation}\r\n    <div class=\"translate-result-area\">\r\n      <span class=\"translate-result-area-header\">{translation.type}</span>\r\n      {#each translation.content as line}\r\n        <div class=\"translate-result-line\">\r\n          <div>\r\n            <div class=\"frequency-bar\" />\r\n            <span class=\"translation-word-of-line\">{line.word}</span>\r\n          </div>\r\n          {#if showSimilarWordsForTranslations}\r\n            <div>{line.meaning.join(', ')}</div>\r\n          {/if}\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  {/each}\r\n{/if}\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport { translate } from \"../API/google-translate\";\r\nimport DropdownMenu from \"../Components/DropdownMenu.svelte\";\r\nexport let targetWords;\r\nonMount(async () => {\r\n    if (targetWords) {\r\n        await translateWords(null);\r\n    }\r\n});\r\nlet languages = [\"Turkish\", \"English\"];\r\nlet translationResult;\r\nlet showSimilarWordsForTranslations = false;\r\nasync function translateWords(e) {\r\n    let result = await translate(targetWords, { from: \"en\", to: \"tr\" }, false);\r\n    if (result) {\r\n        if (result.hasOwnProperty(\"translations\")) {\r\n            translationResult = result;\r\n        }\r\n    }\r\n    console.log(translationResult);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">textarea {\n  color: white;\n  background-color: #333333;\n  border: none; }\n  textarea::placeholder {\n    color: #a7a7a7; }\n\ntop-bar {\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr; }\n  top-bar button {\n    justify-self: center;\n    width: max-content; }\n\n.translate-from {\n  justify-self: right; }\n\n#translations-of {\n  color: white;\n  background-color: #292929; }\n\n.translate-result-area {\n  display: grid;\n  row-gap: 5px;\n  grid-template-columns: max-content;\n  color: #a7a7a7;\n  background-color: #424242;\n  padding-bottom: 6px; }\n  .translate-result-area .translate-result-area-header {\n    color: #ffdd57; }\n  .translate-result-area .translate-result-line {\n    display: grid;\n    grid-auto-flow: column;\n    grid-auto-columns: 1fr;\n    padding: 3px; }\n    .translate-result-area .translate-result-line .translation-word-of-line {\n      color: white; }\n\n/*# sourceMappingURL=TranslationView.svelte.css.map */</style>\r\n\r\n<top-bar>\r\n  <DropdownMenu placeholder=\"Translate To\" items={languages} />\r\n  <button class=\"button is-link\">\r\n    <span class=\"icon is-medium\">\r\n      <i class=\"fas fa-exchange-alt\" />\r\n    </span>\r\n  </button>\r\n  <DropdownMenu\r\n    justifySelf=\"right\"\r\n    placeholder=\"Translate From\"\r\n    items={languages} />\r\n</top-bar>\r\n\r\n<textarea\r\n  bind:value={targetWords}\r\n  on:change={translateWords}\r\n  class=\"textarea has-fixed-size\"\r\n  placeholder=\"Translate\"\r\n  name=\"main-text-area\"\r\n  id=\"main-text-area\"\r\n  cols={30}\r\n  rows={5}/>\r\n{#if translationResult != null}\r\n  {#if translationResult.target != null}\r\n    <div id=\"translations-of\">Translations of {targetWords}</div>\r\n  {/if}\r\n  <div class=\"translate-result-area\">\r\n    <span class=\"translate-result-area-header\" style=\"font-weight: bold;\">\r\n      most common\r\n    </span>\r\n    <span style=\"font-weight: bold; color:white;\">\r\n      {translationResult.translation}\r\n    </span>\r\n  </div>\r\n  {#each translationResult.translations as translation}\r\n    <div class=\"translate-result-area\">\r\n      <span class=\"translate-result-area-header\">{translation.type}</span>\r\n      {#each translation.content as line}\r\n        <div class=\"translate-result-line\">\r\n          <div>\r\n            <div class=\"frequency-bar\" />\r\n            <span class=\"translation-word-of-line\">{line.word}</span>\r\n          </div>\r\n          {#if showSimilarWordsForTranslations}\r\n            <div>{line.meaning.join(', ')}</div>\r\n          {/if}\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  {/each}\r\n{/if}\r\n"
  ],
  "names": [],
  "mappings": "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"
}